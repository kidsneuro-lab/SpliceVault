AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  Country:
    Type: String
    AllowedValues:
      - au
      - us
  Env:
    Type: String
    AllowedValues:
      - dev
      - test
      - prod
  App:
    Type: String
  ContainerServicePower:
    Type: String
    AllowedValues:
      - nano
      - micro
      - small
      - medium
      - large
  DomainName:
    Type: String
  CertificateName:
    Type: String

Resources:

  ContainerService:
    Type: AWS::Lightsail::Container
    Properties:
      Power: !Ref ContainerServicePower
      Scale: 1
      ServiceName: !Join [ "-", [ !Ref Country, !Ref Env, !Ref App, "containers" ] ]
      PublicDomainNames:
        - CertificateName: !Ref CertificateName
          DomainNames:
            - !Ref DomainName
      
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join [ "-", [ !Ref Country, !Ref Env, !Ref App, "storage" ] ]
      AccessControl: Private

  RuntimeUser:
    Type: "AWS::IAM::User"
    Properties:
      UserName: !Join [ "_", [ "global", !Ref Env, !Ref App, "user", "runtime" ] ]
  
  RuntimeUserKeys:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref RuntimeUser

  RuntimePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: RuntimePolicy
      Users:
        - !Ref RuntimeUser
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - "s3:PutObject"
              - "s3:PutObjectAcl"
              - "s3:GetObject"
              - "s3:GetObjectAcl"
              - "s3:AbortMultipartUpload"
              - "s3:ListBucketMultipartUploads"
              - "s3:ListMultipartUploadParts"
            Resource: !Sub "arn:aws:s3:::${Bucket}/*"
          - Effect: Allow
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:DescribeLogGroups"
            Resource: "arn:aws:logs:*:*:log-group:*"
          - Effect: Allow
            Action:
              - "logs:PutLogEvents"
            Resource: "arn:aws:logs:*:*:log-group:*:log-stream:*"
          - Effect: Allow
            Action:
              - "cloudwatch:PutMetricData"
            Resource: "*"

  DeploymentUser:
    Type: "AWS::IAM::User"
    Properties:
      UserName: !Join [ "_", [ "global", !Ref Env, !Ref App, "user", "deployment" ] ]

  DeploymentUserKeys:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref DeploymentUser

  DeploymentPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: DeploymentPolicy
      Users:
        - !Ref DeploymentUser
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - "s3:GetBucketLocation"
              - "s3:ListBucket"
              - "s3:ListBucketMultipartUploads"
            Resource: "*"
          - Effect: Allow
            Action:
              - "s3:GetObject"
              - "s3:GetObjectAcl"
            Resource: "*"
          - Effect: Allow
            Action:
              - "lightsail:CreateContainerServiceRegistryLogin"
              - "lightsail:GetContainerImages"
            Resource: "*"
          - Effect: Allow
            Action:
              - "lightsail:RegisterContainerImage"
              - "lightsail:CreateContainerServiceDeployment"
            Resource: "*"

Outputs:
  AwsRuntimeKey:
    Value: !Ref RuntimeUserKeys
  AwsRuntimeSecret:
    Value: !GetAtt RuntimeUserKeys.SecretAccessKey
  AwsDeploymentKey:
    Value: !Ref DeploymentUserKeys
  AwsDeploymentSecret:
    Value: !GetAtt DeploymentUserKeys.SecretAccessKey
  ContainerServiceName:
    Value: !Ref ContainerService
  BucketName:
    Value: !Ref Bucket